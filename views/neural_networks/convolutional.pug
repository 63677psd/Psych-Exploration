extends /templates/simulation-template

block title
	- const title = "Convolutional Neural Networks"

block required_scripts
	- const required_scripts = ["convolutional-sketch.js"];
	script(src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs")

block nav_info
	- const current_page = "Neural Networks";
	- const prev_page = {name: "Feedforward NN", link: "/feedforward"};
	- const next_page = {name:"Object Detection", link: "/object-detection"};

block summary
	p. 
		we do a lot of things with our eyes, quickly classify objects usually without even thinking about it. We can start to try to model this with a computer using a regular feedforward network as desccribed in the last section. A network like this would be set up with each of the pixels as inputs, and an output of probabilities of being a certain object.  However, it turns out that networks like this don't do a great job of classifying images.  feature detection. Feature detection can be simulated by adding something called convolutional layers.  These work as follows: put some images and things. So, to make a neural network that is good at classifying images, we add convolutional layers that are trained to break the image down into more abstract components and then have layers that classify the image BASED off of that.

block instructions
	.col.fw-bold instructions
	.col-2
		button.btn.btn-primary#load(onclick="load()") Load
		button.btn.btn-warning#clear(onclick="clear()" style="display:none") Clear